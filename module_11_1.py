"""
NumPy — это базовый пакет для научных вычислений в Python. Это библиотека Python,
 которая предоставляет объект многомерного массива, различные производные объекты
(например, массивы с масками и матрицы) и набор процедур для быстрых операций с массивами, включая математические,
логические операции, манипуляции с формой, сортировку, выборку, ввод-вывод, дискретные преобразования Фурье,
базовую линейную алгебру, базовые статистические операции, моделирование случайных процессов и многое другое.
"""


import numpy as np

# Создаем одномерный и двумерный массив, выполняем арифметические операции —
# сложение элементов одномерного массива и умножение их на 2.

# Создание одномерного массива
arr = np.array([1, 3, 5, 7])
print("Одномерный массив:", arr)

# Выполнение арифметические операции
# Сумма элементов массива
summ = np.sum(arr)
print("Сумма элементов массива:", summ)
squared = arr * 2
print("Элементы массива умноженные на 2:", squared)

# Создание двумерного массива
matrix = np.array([[1, 4, 6], [7, 8, 9]])
print("Двумерный массив:\n", matrix)
# Сумма элементов двумерного массива
print("Сумма элементов двумерного массива:\n", np.sum(matrix))

# Создание массива случайных чисел
data = np.random.randint(1, 51, size=10)  # 10 случайных целых чисел от 1 до 50
print("Случайные числа:", data)

# Вычисление статистических показателей
mean_value = np.mean(data)  # среднее значение
print("Среднее:", mean_value)
median_value = np.median(data)  # медиана
print("Медиана:", median_value)
std_dev = np.std(data)          # стандартное отклонение
print("Стандартное отклонение:", std_dev)

# Выполняем операции сложения и умножения матриц, а также вычисляем обратную матрицу

# Определение двумерных массивов (матриц)
A = np.array([[1, 2], [3, 4]])
B = np.array([[5, 6], [7, 8]])

# Сложение матриц
C = A + B
print("Сложение матриц:\n", C)

# Умножение матриц
# При умножении матриц важно, чтобы
# количество столбцов первой матрицы было равно количеству строк второй матрицы.
D = np.dot(A, B)
print("Умножение матриц:\n", D)

# Вычисление обратной матрицы
A_inv = np.linalg.inv(A)
print("Матрица обратная матрице A:\n", A_inv)
